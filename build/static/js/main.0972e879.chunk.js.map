{"version":3,"sources":["rotationService.js","App.js","index.js"],"names":["getWeek","laborDay","Date","timeDiff","getTime","dayDiff","Math","ceil","floor","App","week","date","month","toLocaleString","day","getDay","weekEnd","getDate","setHours","console","log","Blue","className","Orange","Red","Green","Container","Alert","variant","style","marginBottom","borderRadius","Table","striped","bordered","hover","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAoBeA,EApBC,WACd,IAAMC,EAAW,IAAIC,KAAK,gBAEpBC,GADQ,IAAID,MACKE,UAAYH,EAASG,UACtCC,EAAUC,KAAKC,KAAKJ,EAAQ,OAElC,OADkBE,EAAU,EAAI,EAAIC,KAAKE,MAAMH,EAAU,EAAI,IAE3D,KAAK,EACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,IAAK,GACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,QACE,OAAO,I,+BC2FEI,MAzGf,WACE,IAAMC,EAAOV,IACPW,EAAO,IAAIT,KACXU,EAAQD,EAAKE,eAAe,UAAW,CAAED,MAAO,SAChDE,EAAMH,EAAKI,SACXC,EAAUL,EAAKM,UAAYH,EAAM,EAE3B,IAARA,IACFH,EAAKO,UAAU,IAAMJ,EAAM,IAC3BK,QAAQC,IAAIT,IAId,IAAMU,EAAO,WACX,OACE,qBAAIC,UAAU,aAAd,UACE,sCACA,mCACA,sCACA,mCACA,mCACA,uCAIAC,EAAS,WACb,OACE,qBAAID,UAAU,gBAAd,UACE,wCACA,mCACA,sCACA,mCACA,mCACA,uCAKAE,EAAM,WACV,OACE,qBAAIF,UAAU,eAAd,UACE,qCACA,mCACA,sCACA,mCACA,mCACA,uCAIAG,EAAQ,WACZ,OACE,qBAAIH,UAAU,gBAAd,UACE,uCACA,mCACA,sCACA,mCACA,mCACA,uCAIN,OACE,eAACI,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAO,CAAEC,aAAc,EAAGC,aAAc,GAAjE,6CACmCnB,EADnC,IAC2CD,EAAKM,UADhD,gBACwE,IACrED,KAEH,eAACgB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAnC,UACE,gCACE,qBACEd,UACW,IAATZ,EACI,aACS,IAATA,EACA,gBACS,IAATA,EACA,eACA,gBARR,UAWE,mCACA,mCACA,mCACA,mCACA,oCACA,wCAGJ,gCACY,IAATA,EACC,cAACW,EAAD,IACW,IAATX,EACF,cAACa,EAAD,IACW,IAATb,EACF,cAACc,EAAD,IAEA,cAACC,EAAD,aC/FZY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0972e879.chunk.js","sourcesContent":["const getWeek = () => {\n  const laborDay = new Date('June 14 2021');\n  const today = new Date();\n  const timeDiff = today.getTime() - laborDay.getTime();\n  const dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  const whichWeek = dayDiff / 7 / 4 - Math.floor(dayDiff / 7 / 4);\n  switch (whichWeek) {\n    case 1:\n      return 1;\n    case 0.75:\n      return 4;\n    case 0.5:\n      return 3;\n    case 0.25:\n      return 2;\n    default:\n      return 1;\n  }\n};\n\nexport default getWeek;\n","import getWeek from './rotationService';\nimport { Container, Table, Alert } from 'react-bootstrap';\nfunction App() {\n  const week = getWeek();\n  const date = new Date();\n  const month = date.toLocaleString('default', { month: 'long' });\n  const day = date.getDay();\n  const weekEnd = date.getDate() - day + 7;\n\n  if (day !== 1) {\n    date.setHours(-24 * (day - 1));\n    console.log(date);\n  }\n  // const weekBegin = date.getDate() - day + 1;\n\n  const Blue = () => {\n    return (\n      <tr className=\"table-info\">\n        <td>Blue</td>\n        <td>A</td>\n        <td>ABCD</td>\n        <td>B</td>\n        <td>C</td>\n        <td>D</td>\n      </tr>\n    );\n  };\n  const Orange = () => {\n    return (\n      <tr className=\"table-warning\">\n        <td>Orange</td>\n        <td>D</td>\n        <td>ABCD</td>\n        <td>A</td>\n        <td>B</td>\n        <td>C</td>\n      </tr>\n    );\n  };\n\n  const Red = () => {\n    return (\n      <tr className=\"table-danger\">\n        <td>Red</td>\n        <td>C</td>\n        <td>ABCD</td>\n        <td>D</td>\n        <td>A</td>\n        <td>B</td>\n      </tr>\n    );\n  };\n  const Green = () => {\n    return (\n      <tr className=\"table-success\">\n        <td>Green</td>\n        <td>B</td>\n        <td>ABCD</td>\n        <td>C</td>\n        <td>D</td>\n        <td>A</td>\n      </tr>\n    );\n  };\n  return (\n    <Container>\n      <Alert variant=\"primary\" style={{ marginBottom: 0, borderRadius: 0 }}>\n        Office Schedule for the week of {month} {date.getDate()} blah through{' '}\n        {weekEnd}\n      </Alert>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr\n            className={\n              week === 1\n                ? 'table-info'\n                : week === 2\n                ? 'table-warning'\n                : week === 3\n                ? 'table-danger'\n                : 'table-success'\n            }\n          >\n            <th>#</th>\n            <th>M</th>\n            <th>T</th>\n            <th>W</th>\n            <th>Tr</th>\n            <th>F</th>\n          </tr>\n        </thead>\n        <tbody>\n          {week === 1 ? (\n            <Blue />\n          ) : week === 2 ? (\n            <Orange />\n          ) : week === 3 ? (\n            <Red />\n          ) : (\n            <Green />\n          )}\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}